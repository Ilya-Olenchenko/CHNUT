/* Generated by Together */

package net.soft_systems.crypto.beans.policy;
import java.awt.event.*;
import java.beans.PropertyVetoException;
import javax.swing.*;
import net.soft_systems.crypto.Run;
import net.soft_systems.crypto.base.CryptoBean;
import net.soft_systems.crypto.frames.policy.RightFrame;
import net.soft_systems.integrator.*;
public class RightBean extends CryptoBean implements DynamicBean {
	protected String id;
	protected String name;
	public String getId() { return id; }
	public void setId(String id) {
		this.id = id;
		if (name == null) { name = id; }
	}
	public String getName() { return name; }
	public void setName(String name) { this.name = name; }
	public String getBaseName() { return "r"; }
	public void initMenu(JPopupMenu menu) {
		JMenuItem menuItem = new JMenuItem(Run.integrator.messages.getMessage("properties"));
		menuItem.setMnemonic(KeyEvent.VK_ENTER);
		menuItem.addActionListener(
			new ActionListener() {
				public void actionPerformed(ActionEvent e) { Run.integrator.addFrameToDesktop(getEditFrame()); }
			});
		menu.add(menuItem);
	}
	protected EditFrame editFrame;
	public void closeEditFrame() {
		if (editFrame != null) {
			try { editFrame.setClosed(true); }
			catch (PropertyVetoException ex) { Debug.warning("PropertyVetoException :" + ex.getMessage()); }
			editFrame = null;
		}
	}
	public EditFrame getEditFrame() {
		if (editFrame == null) { editFrame = new RightFrame(this); }
		return editFrame;
	}
	public String getTypeName() { return "Право доступа"; }
	public String toString() { return getId() + " / " + getName(); }
}

