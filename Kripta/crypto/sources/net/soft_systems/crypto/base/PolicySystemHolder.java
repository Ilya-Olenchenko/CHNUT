/* Generated by Together */

package net.soft_systems.crypto.base;
import java.util.Vector;
import net.soft_systems.integrator.*;
public class PolicySystemHolder extends SystemHolder {
	protected PolicySystemHolder() { super(); }
	static public PolicySystemHolder getNewPolicySystemHolder(Bean rootBean) {
		PolicySystemHolder sh = new PolicySystemHolder();
		sh.init(rootBean);
		return sh;
	}
	public void init(Bean rootBean) {
		super.init(rootBean);
		if (rootBean != null) {
			try {
				policies = BeanUtil.getBeanById(rootBean, "policies").getChildBeans();
				availPolicies = BeanUtil.getBeanById(rootBean, "avail-policies").getChildBeans();
			}
			catch (NullPointerException ex) {
				Debug.critical("Ошибка в иерархии. Не найдены требуемые множества");
				ex.printStackTrace();
			}
		}
		else { Debug.critical("Ошибка в иерархии элементов"); }
	}
	public Vector getAvailPolicies() { return availPolicies; }
	public Bean getPolicyTopic() { return BeanUtil.getBeanById(rootBean, "policies"); }
	public Vector getRights() { return BeanUtil.getBeanById(rootBean, "rights").getChildBeans(); }
	public Vector getPolicies() { return policies; }
	private Vector availPolicies;
	private Vector policies;
}

