/* Generated by Together */

package net.soft_systems.crypto.frames;
import java.util.Vector;
import net.soft_systems.crypto.Run;
import net.soft_systems.integrator.*;
/**
 * Panel where painting of beans is performed. It must be placed into
 * Scrollpane in order to be scrollable because StructureCanvas changes it's
 * size according to placement of beans. Beans can be moved in the canvas, double clicked.
 */
public class StructureCanvas extends CryptoCanvas {
	protected Vector getBeanRelations(Bean b) { return Run.infoSystem.getRelations(b); }
	public Vector getBeansVectors() {
		Vector beans = new Vector();
		beans.add(Run.infoSystem.getRelations());
		beans.add(Run.infoSystem.getResources());
		beans.add(Run.infoSystem.getBoundaries());
		beans.add(Run.infoSystem.getProtections());
		beans.add(Run.infoSystem.getVulnerabilities());
		beans.add(Run.infoSystem.getThreats());
		beans.add(Run.infoSystem.getSubjects());
		return beans;
	}
	/**
	 * @return Vector containing vectors of beans which can be selected on the canvas. Order of selection is
	 * the same as order of vectors
	 */
	public Vector getSelectBeansVectors() {
		Vector beans = new Vector();
		beans.add(Run.infoSystem.getResources());
		beans.add(Run.infoSystem.getBoundaries());
		beans.add(Run.infoSystem.getProtections());
		beans.add(Run.infoSystem.getVulnerabilities());
		beans.add(Run.infoSystem.getThreats());
		beans.add(Run.infoSystem.getSubjects());
		beans.add(Run.infoSystem.getRelations());
		return beans;
	}
	/**
	 * Must return relation bean which includes <code>draggedBean</code>
	 * @return instance of relation bean with bean <code>draggedBean</code>
	 */
	protected RenderableBean isRelationSource(RenderableBean draggedBean) { return null; }
	/**
	 * Must return true if bean <code>nextBean</code> can be included in relation <code>relation</code>
	 * and add that bean to the ralation
	 * @return true if bean <code>nextBean</code> can be included in relation <code>relation</code>.
	 */
	protected boolean tryAddToRelation(RenderableBean relation, RenderableBean nextBean) { return false; }
}

