/* Generated by Together */

package net.soft_systems.crypto.frames;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import net.soft_systems.crypto.Run;
import net.soft_systems.integrator.Bean;
public class ViewElementsPanel extends JPanel implements UpdatablePanel {
	protected Bean parentBean;
	protected void init() {
		listPanel = new JPanel();
		buttonPanel = new JPanel();
		listName = new JLabel();
		list = new JList();
		editButton = new JButton();
		JScrollPane scrollListPane = new JScrollPane(list);
		//setting text values
		listName.setText(Run.integrator.messages.getMessage("elem-list"));
		editButton.setText(Run.integrator.messages.getMessage("edit"));
		// adding ui elements
		setLayout(new GridBagLayout());
		add(listPanel,
			new GridBagConstraints(0, 0, 1, GridBagConstraints.REMAINDER, 1.0, 1.0, GridBagConstraints.SOUTHWEST,
			GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0, 0));
		add(buttonPanel,
			new GridBagConstraints(1, 0, 1, 1, 0.0, 1.0, GridBagConstraints.EAST, GridBagConstraints.BOTH,
			new Insets(0, 0, 0, 0), 0, 0));
		setBounds(new Rectangle(0, 0, 379, 446));
		listPanel.setLayout(new GridBagLayout());
		listPanel.add(listName,
			new GridBagConstraints(0, 0, GridBagConstraints.REMAINDER, GridBagConstraints.RELATIVE, 1.0, 0.0,
			GridBagConstraints.SOUTH, GridBagConstraints.HORIZONTAL, new Insets(5, 5, 0, 5), 0, 0));
		listPanel.add(scrollListPane,
			new GridBagConstraints(0, GridBagConstraints.RELATIVE, GridBagConstraints.REMAINDER,
			GridBagConstraints.REMAINDER, 1.0, 1.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH,
			new Insets(5, 5, 5, 5), 0, 0));
		buttonPanel.setLayout(new GridBagLayout());
		buttonPanel.add(editButton,
			new GridBagConstraints(0, 1, GridBagConstraints.REMAINDER, 1, 1.0, 0.0, GridBagConstraints.SOUTH,
			GridBagConstraints.HORIZONTAL, new Insets(5, 5, 0, 5), 0, 0));
		list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		// adding ActionListeners to buttons
		editButton.addActionListener(
			new ActionListener() {
				public void actionPerformed(ActionEvent e) { doEditElement(); }
			});
		list.addMouseListener(
			new MouseAdapter() {
				public void mouseClicked(MouseEvent e) {
					if (e.getClickCount() > 1) { doEditElement(); }
				}
			});
	}
	protected void doEditElement() {
		if (list.getSelectedIndex() >= 0 && list.getSelectedIndex() < parentBean.getChildBeans().size()) {
			Bean bean = (Bean)list.getSelectedValue();
			if (bean != null) { Run.integrator.tryEditBean(bean); }
		}
	}
	public void update() { list.setListData(parentBean.getChildBeans()); }
	public ViewElementsPanel(Bean parentBean) {
		super();
		this.parentBean = parentBean;
		init();
		list.setListData(parentBean.getChildBeans());
	}
	private JPanel listPanel;
	private JPanel buttonPanel;
	private JLabel listName;
	private JList list;
	private JButton editButton;
	public Bean getParentBean() { return parentBean; }
}

