/* Generated by Together */

package net.soft_systems.crypto.frames.structure;
import java.awt.*;
import javax.swing.*;
import net.soft_systems.crypto.base.CryptoBean;
import net.soft_systems.crypto.beans.structure.VulnerabilityBean;
import net.soft_systems.crypto.frames.CryptoEditFrame;
public class VulnerabilityEditFrame extends CryptoEditFrame {
	public VulnerabilityEditFrame(CryptoBean bean) { super(bean); }
	JTextField lossField;
	protected void initPropertiesPanel() {
		propertiesPanel = new JPanel();
		setBackground(propertiesPanel.getBackground());
		propertiesPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createTitledBorder("Свойства"),
			BorderFactory.createEmptyBorder(5, 5, 5, 5)));
		GridBagLayout layout = new GridBagLayout();
		propertiesPanel.setLayout(layout);
		GridBagConstraints c;
		c = new GridBagConstraints();
		c.gridwidth = 1;
		c.gridheight = 1;
		c.fill = GridBagConstraints.VERTICAL;
		c.weightx = 1;
		c.insets = new Insets(0, 10, 0, 0);
		propertiesPanel.add(new JLabel("Идентификатор:"), c);
		c = new GridBagConstraints();
		c.gridwidth = GridBagConstraints.REMAINDER;
		c.gridheight = 1;
		c.fill = GridBagConstraints.BOTH;
		c.weightx = 100;
		c.insets = new Insets(0, 5, 0, 10);
		idField = new JTextField(getBean().getId());
		propertiesPanel.add(idField, c);
		c.gridwidth = 1;
		c.gridheight = 1;
		c.fill = GridBagConstraints.VERTICAL;
		c.weightx = 1;
		c.insets = new Insets(5, 10, 0, 0);
		propertiesPanel.add(new JLabel("Величина ущерба:"), c);
		c = new GridBagConstraints();
		c.gridwidth = GridBagConstraints.REMAINDER;
		c.gridheight = 1;
		c.fill = GridBagConstraints.BOTH;
		c.weightx = 100;
		c.insets = new Insets(5, 5, 0, 10);
		VulnerabilityBean vulnerability = (VulnerabilityBean)getBean();
		lossField = new JTextField("" + vulnerability.getLoss());
		propertiesPanel.add(lossField, c);
	}
	protected boolean setLoss() {
		VulnerabilityBean vulnerability = (VulnerabilityBean)getBean();
		try {
			double value = Double.valueOf(lossField.getText()).doubleValue();
			if (value >= 0) {
				vulnerability.setLoss(value);
				return true;
			}
			else {
				JOptionPane.showInternalMessageDialog(this, "Величина ущерба должна быть больше или равна 0",
					"Ошибка", JOptionPane.ERROR_MESSAGE);
				return false;
			}
		}
		catch (NumberFormatException ex) {
			JOptionPane.showInternalMessageDialog(this, "Неправильный формат величины ущерба", "Ошибка",
				JOptionPane.ERROR_MESSAGE);
			return false;
		}
	}
	protected void doOk() {
		if (setLoss()) {
			setId();
			closeFrame();
		}
	}
	protected void init() {
		initPropertiesPanel();
		GridBagLayout layout = new GridBagLayout();
		getContentPane().setLayout(layout);
		GridBagConstraints c = new GridBagConstraints();
		c.gridwidth = GridBagConstraints.REMAINDER;
		c.gridheight = 1;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.weightx = 1;
		c.weighty = 1;
		c.insets = new Insets(5, 5, 5, 5);
		c.anchor = GridBagConstraints.NORTH;
		getContentPane().add(propertiesPanel, c);
		initButtonPanel();
		c = new GridBagConstraints();
		c.gridwidth = GridBagConstraints.REMAINDER;
		c.gridheight = 1;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.weightx = 1;
		c.weighty = 0;
		c.insets = new Insets(0, 0, 0, 0);
		c.anchor = GridBagConstraints.SOUTH;
		getContentPane().add(buttonPanel, c);
	}
}

