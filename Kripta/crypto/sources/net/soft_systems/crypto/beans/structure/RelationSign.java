/* Generated by Together */

package net.soft_systems.crypto.beans.structure;
import java.awt.Shape;
import java.awt.geom.*;
import java.util.Enumeration;
import net.soft_systems.integrator.Sign;
public class RelationSign extends Sign {
	public double getAngle(Line2D.Double line) {
		return Math.atan2(line.getY2() - line.getY1(), line.getX2() - line.getX1());
	}
	public double getLength(Line2D.Double line) {
		return Math.sqrt((line.getY2() - line.getY1()) * (line.getY2() - line.getY1()) +
			(line.getX2() - line.getX1()) * (line.getX2() - line.getX1()));
	}
	public Shape getSelection() {
		Area area = new Area();
		Enumeration en = this.getShapes().elements();
		while (en.hasMoreElements()) {
			Shape sh = (Shape)en.nextElement();
			if (Line2D.Double.class.isAssignableFrom(sh.getClass())) {
				Line2D.Double line = (Line2D.Double) sh;
				AffineTransform transform;
				Shape transShape;
				double angle = getAngle(line);
				double len   = getLength(line);
				double W     = 3;
				Rectangle2D.Double rect = new Rectangle2D.Double(line.getX1(), line.getY1() - W, len, W * 2);
				transform = AffineTransform.getRotateInstance(angle, line.getX1(), line.getY1());
				transShape = transform.createTransformedShape(rect);
				area.add(new Area(transShape));
			}
			else { area.add(new Area(sh)); }
		}
		return area;
	}
	public boolean getDrawId() { return false; }
}

