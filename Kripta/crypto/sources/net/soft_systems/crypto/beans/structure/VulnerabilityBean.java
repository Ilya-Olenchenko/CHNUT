/*
 * VulnerabilityBean.java
 *
 * Created on неділя, 25, серпня 2002, 20:50
 */

package net.soft_systems.crypto.beans.structure;
import java.awt.geom.GeneralPath;
import net.soft_systems.crypto.Run;
import net.soft_systems.crypto.base.CryptoRenderableBean;
import net.soft_systems.crypto.frames.structure.VulnerabilityEditFrame;
import net.soft_systems.integrator.*;
import org.w3c.dom.Element;
/**
 * ----------------------------------------------------------------------------------------------------------
 * @author andrew
 * @version ---------------------------------------------------------------------------------------------------------
 */
public class VulnerabilityBean extends CryptoRenderableBean {
	public VulnerabilityBean() {
		// super(Run.infoSystem.newBoundary(""));
		super();
	}
	public VulnerabilityBean(String id) {
		// super(Run.infoSystem.newBoundary(id));
		super(id);
	}
	public Sign getSign() {
		Sign sign = new Sign();
		GeneralPath path = new GeneralPath();
		path.moveTo(22, 7);
		path.quadTo(30, 0, 38, 7);
		path.lineTo(57, 47);
		path.quadTo(57, 57, 47, 59);
		path.lineTo(13, 59);
		path.quadTo(3, 57, 3, 47);
		path.lineTo(22, 7);
		sign.addShape(path);
		return sign;
	}
	public double getCenterX() { return 30; }
	/**
	 * ------------------------------------------------------------------------------------------------------
	 * -----------------------------------------------------------------------------------------------------
	 */
	public EditFrame getEditFrame() {
		if (editFrame == null) { editFrame = new VulnerabilityEditFrame(this); }
		return editFrame;
	}
	public double getCenterY() { return 35; }
	public String getBaseName() { return "V"; }
	public String getTypeName() { return "Уязвимость"; }
	public double getLoss() { return loss; }
	public void setLoss(double loss) {
		if (loss >= 0 && this.loss != loss) {
			this.loss = loss;
			doChangeParams();
		}
	}
	protected void doChangeParams() { Run.infoSystem.evalBoundaryRisks(this); }
	public void store(Element beanElement, BeanConfig config) {
		super.store(beanElement, config);
		config.setAttribute(beanElement, "loss", "" + getLoss());
	}
	public void load(Element beanElement, BeanConfig config) {
		super.load(beanElement, config);
		loss = config.getDoubleAttribute(beanElement, "loss", 0);
	}
	private double loss;
}

