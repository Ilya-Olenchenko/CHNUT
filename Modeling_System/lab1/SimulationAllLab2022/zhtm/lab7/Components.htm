<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.85pt;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
h1
	{mso-style-link:"Заголовок 1 Знак";
	margin-top:0cm;
	margin-right:36.85pt;
	margin-bottom:12.0pt;
	margin-left:56.95pt;
	text-align:center;
	text-indent:0cm;
	page-break-before:always;
	font-size:14.0pt;
	font-family:"Arial","sans-serif";
	color:maroon;
	text-transform:uppercase;}
h2
	{mso-style-link:"Заголовок 2 Знак";
	margin-top:12.0pt;
	margin-right:39.7pt;
	margin-bottom:3.0pt;
	margin-left:112.1pt;
	text-indent:-1.0cm;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial","sans-serif";}
h3
	{mso-style-link:"Заголовок 3 Знак";
	margin-top:12.0pt;
	margin-right:39.7pt;
	margin-bottom:3.0pt;
	margin-left:138.4pt;
	text-indent:-31.2pt;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial","sans-serif";}
h4
	{mso-style-link:"Заголовок 4 Знак";
	margin-top:12.0pt;
	margin-right:39.7pt;
	margin-bottom:3.0pt;
	margin-left:139.15pt;
	text-indent:-45.35pt;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial","sans-serif";
	font-style:italic;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{mso-style-name:"Название объекта\,Подпись под рисунком";
	mso-style-link:"Название объекта Знак\,Подпись под рисунком Знак";
	margin-top:6.0pt;
	margin-right:36.85pt;
	margin-bottom:12.0pt;
	margin-left:36.85pt;
	text-align:center;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Название Знак1";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:center;
	text-indent:36.85pt;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
span.1
	{mso-style-name:"Заголовок 1 Знак";
	mso-style-link:"Заголовок 1";
	font-family:"Arial","sans-serif";
	color:maroon;
	text-transform:uppercase;
	font-weight:bold;}
span.2
	{mso-style-name:"Заголовок 2 Знак";
	mso-style-link:"Заголовок 2";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.3
	{mso-style-name:"Заголовок 3 Знак";
	mso-style-link:"Заголовок 3";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.4
	{mso-style-name:"Заголовок 4 Знак";
	mso-style-link:"Заголовок 4";
	font-family:"Arial","sans-serif";
	font-weight:bold;
	font-style:italic;}
p.a, li.a, div.a
	{mso-style-name:СтильРисунка;
	mso-style-link:"СтильРисунка Знак";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:center;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
p.a0, li.a0, div.a0
	{mso-style-name:"Стиль текста программ в рамке";
	margin-top:3.0pt;
	margin-right:0cm;
	margin-bottom:12.0pt;
	margin-left:0cm;
	border:none;
	padding:0cm;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
p.a0CxSpFirst, li.a0CxSpFirst, div.a0CxSpFirst
	{mso-style-name:"Стиль текста программ в рамкеCxSpFirst";
	margin-top:3.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	border:none;
	padding:0cm;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
p.a0CxSpMiddle, li.a0CxSpMiddle, div.a0CxSpMiddle
	{mso-style-name:"Стиль текста программ в рамкеCxSpMiddle";
	margin:0cm;
	margin-bottom:.0001pt;
	border:none;
	padding:0cm;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
p.a0CxSpLast, li.a0CxSpLast, div.a0CxSpLast
	{mso-style-name:"Стиль текста программ в рамкеCxSpLast";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:12.0pt;
	margin-left:0cm;
	border:none;
	padding:0cm;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
span.a1
	{mso-style-name:"Название Знак";
	font-family:"Calibri Light","sans-serif";
	letter-spacing:-.5pt;}
p.a2, li.a2, div.a2
	{mso-style-name:СтильЗаголовкаЛистинга;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
span.a3
	{mso-style-name:"Название объекта Знак\,Подпись под рисунком Знак";
	mso-style-link:"Название объекта\,Подпись под рисунком";
	font-family:"Times New Roman","serif";}
span.a4
	{mso-style-name:"СтильРисунка Знак";
	mso-style-link:СтильРисунка;
	font-family:"Times New Roman","serif";}
span.10
	{mso-style-name:"Название Знак1";
	mso-style-link:Название;
	font-family:"Times New Roman","serif";}
.MsoChpDefault
	{font-family:"Calibri","sans-serif";}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=RU>

<div class=WordSection1>

<h2 align=center style='margin-top:12.0pt;margin-right:2.85pt;margin-bottom:
6.0pt;margin-left:0cm;text-align:center;text-indent:0cm'><a name="_Toc319860444"><span
lang=UK>Засоби для автоматизації проведення одно факторних експериментів та
обробки їх результатів</span></a></h2>

<h3 style='margin-top:12.0pt;margin-right:36.85pt;margin-bottom:3.0pt;
margin-left:0cm;text-indent:35.45pt'><a name="_Toc319860445"><span lang=UK>Компонент
Experimen</span></a><span lang=EN-US>Manager</span></h3>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>В пакеті </span><span
lang=EN-US>widgets</span><span lang=UK>.</span><span lang=EN-US>experiments</span><span
lang=UK> міститься клас </span><span lang=EN-US>ExperimentManager</span><span
lang=UK>, який надає розробнику<span style='color:red'> </span>імітаційних
моделей візуальний компонент для автоматизації проведення однофакторних
експериментів</span><span lang=EN-US>,</span><span lang=UK> накопичення
результатів цих експериментів і подальшого дисперсійного та регресійного
аналізу. </span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Компонент
передбачає технологію</span>, <span lang=UK>відповідно до якої модель
створюється, ініціалізується та запускається самим  компонентом. </span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Необхідною умовою
для роботи компонента є передача йому посилання на фабрику моделей, що реалізує
інтерфейс </span><span lang=EN-US>IModelFactory</span><span lang=UK>. Єдиний
метод цього інтерфейсу createModel(Dispatcher) забезпечує створення моделі і
передачу їй посилання на диспетчера. Зв'язок  компонента </span><span
lang=EN-US>ExperimentManager</span><span lang=UK> з фабрикою моделей
налаштовується через метод </span><span lang=EN-US>setFactory</span><span
lang=UK>(</span><span lang=EN-US>IModelFactory</span><span lang=UK>).</span></p>

<p class=MsoNormal><span lang=UK>Отримавши модель, компонент </span><span
lang=EN-US>ExperimentControl</span><span lang=UK> приводить її до типу   </span><span
lang=EN-US>widgets</span><span lang=UK>.</span><span lang=EN-US>experiments</span><span
lang=UK>.IExperimentable. Це інтерфейс, через який компонент </span><span
lang=EN-US>ExperimenManager</span><span lang=UK> буде працювати моделлю. Тобто
модель має реалізовувати такий інтерфейс. Перелік методів інтерфейсу наведено у
лістингу&nbsp;1. </span></p>

<p class=MsoNormal><span lang=UK>&nbsp;</span></p>

<p class=a2><span lang=UK>Лістинг 1 – Інтерфейс </span><span lang=EN-US>IExperimentable</span></p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=a0CxSpFirst><span lang=EN-US>public</span><span lang=EN-US> </span><span
lang=EN-US>interface</span><span lang=EN-US> </span><span lang=EN-US>IExperimentable</span><span
lang=UK> {</span></p>

<p class=a0CxSpMiddle><span lang=UK>    </span><span lang=UK>    </span><span
lang=EN-US>public void initForExperiment(double factor);</span></p>

<p class=a0CxSpMiddle><span lang=EN-US>    </span><span lang=UK>    </span><span
lang=EN-US>public</span><span lang=EN-US> </span><span lang=EN-US>Map&lt;String,
</span><span lang=UK>Double</span><span lang=EN-US>&gt;</span><span lang=EN-US>
</span><span lang=EN-US>getResultOfExperiment</span><span lang=UK>();</span></p>

<p class=a0CxSpLast><span lang=UK>}</span></p>

</div>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Метод </span><span
lang=EN-US>ini</span><span lang=UK>t</span><span lang=EN-US>For</span><span
lang=UK>Experiment(</span><span lang=EN-US>double</span><span lang=UK>) викликається
перед кожним запуском моделі і має забезпечити підготовку моделі до
однократного запуску. В якості параметра у метод передається значення фактору,
вплив якого вивчається.</span></p>

<p class=MsoNormal><span lang=UK>Метод </span><span lang=EN-US>getResult</span><span
lang=UK>OfExperiment() використовується для отримання результатів експерименту
після його закінчення. Кожен елемент колекції, що повертає цей метод, в якості
ключа містить текст, що ідентифікує результат експерименту, а значенням є сам
результат. Таким чином метод може повертати будь яку кількість відгуків на
задане значення фактору. </span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Для запуску моделі
компонент буде використовувати метод диспетчера </span><span lang=EN-US>start</span>().</p>

<p class=MsoNormal><span lang=UK>Візуальна композиція компонента представлена
на рисунку 1.</span></p>

<p class=a><img width=582 height=350 id="Рисунок 4"
src="Components.files/image001.png"></p>

<p class=MsoCaption><span lang=UK>Рисунок 1 – Компонент для автоматизації
проведення експериментів </span></p>

<p class=MsoNormal><span lang=UK>Компонент можна використовувати як елемент
інтерфейсу користувача у застосуваннях для імітаційного моделювання.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Значення фактору,
для яких потрібно провести експерименти, задаються у вигляді рядка символів в
полі «Значення фактору:». Числові значення факторів повинні бути розділені
стандартними розділовими знаками.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Кількість
експериментів, що мають бути  проведені для кожного значення фактору, задається
у полі «Повторів на рівні:».</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Кнопка «Старт» 
викликає метод </span><span lang=EN-US>buttonStartClick</span><span lang=UK>(),
який забезпечує проведення заданої кількості експериментів на кожному рівні. Під
час проведення експериментів на діаграмі відображаються точки, які відповідають
отриманим результатам, що забезпечує динамічну індикацію ходу експерименту.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>На час проведення
експерименту кнопка «Старт» блокується.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Результати
експериментів можуть бути про логарифмовані. Для цього використовується
перемикач «</span><span lang=EN-US>Ln</span><span lang=UK>».</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Розглянемо, як
компонент організує проведення експериментів з моделлю.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Перш за все
компонент, за допомогою фабрики, створює модель.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Далі з інтерфейсу
користувача зчитуються вихідні дані експерименту і готуються масиви для
результатів експерименту.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Після завершення
підготовчих операцій починаються експерименти з моделлю. Для цього в  методі
організовано подвійний цикл, що забезпечує періодичні запуски моделі за
допомогою методу диспетчера start(). Перед кожним стартом диспетчера модель
готується до запуск. Після кожного запуску моделі виконання методу
призупиняється за допомогою методу join(), що викликається для потоку
диспетчера.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>В процесі виконання
методу в змінній </span><span lang=EN-US>resultM</span><span lang=UK>atrix 
накопичуються результати експериментів. Коли експерименти будуть проведені, в
цій змінній буде міститися матриця результатів. В змінній </span><span
lang=EN-US>resultL</span><span lang=UK>nMatrix будуть міститися
прологарифмовані значення функції відгуку. </span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Відновлення роботи
методу відбувається після того як модель у черговий раз завершіть роботу. З
текстом відповідного методу buttonStartClick() можна ознайомитися у вихідних
кодах фреймворку.</span></p>

<h3 style='margin-top:12.0pt;margin-right:36.85pt;margin-bottom:3.0pt;
margin-left:35.45pt;text-indent:0cm'><a name="_Toc319860446"><span lang=UK>Компонент
класу </span></a><span lang=EN-US>RegresAnaliser</span></h3>

<p class=MsoNormal><span lang=UK>В пакеті </span><span lang=EN-US>widjets</span><span
lang=UK>.</span><span lang=EN-US>regres</span><span lang=UK> міститься клас </span><span
lang=EN-US>RegresAnaliser</span><span lang=UK>, який надає розробникам<span
style='color:red'> </span>імітаційних моделей візуальний компонент для
регресійного та дисперсійного аналізу результатів експериментів. Компонент
можна використовувати при розробці інтерфейсу користувача у застосуваннях для
імітаційного моделювання.</span></p>

<p class=MsoNormal><span lang=UK>Передбачається, що даний компонент буде
працювати з компонентами, які реалізують інтерфейс IRegresable. Зокрема, таким
компонентом є компонент класу </span>ExperimentControl<span lang=UK>. Зв'язок 
компонента з об’єктами, які реалізують інтерфейс IRegresable  налаштовується
через метод </span><span lang=EN-US>setIRegresable</span><span lang=EN-US> </span><span
lang=UK>(IRegresable).</span></p>

<p class=MsoNormal><span lang=UK>Опис інтерфейсу IRegresable представлений у
лістингу 2. Методи цього інтерфейсу забезпечують доступ до експериментальних
даних.</span></p>

<p class=a2>Лістинг <span lang=UK>2</span> – Інтерфейс <span lang=EN-US>RegresExperimentable</span></p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=a0CxSpFirst><span lang=EN-US>public</span><span lang=EN-US> </span><span
lang=EN-US>interface</span><span lang=EN-US> </span><span lang=EN-US>IRegresable</span>
{</p>

<p class=a0CxSpMiddle>    <span lang=EN-US>public</span><span lang=EN-US> </span><span
lang=EN-US>double</span>[] <span lang=EN-US>getFactorsArray</span>();</p>

<p class=a0CxSpMiddle>    <span lang=EN-US>public</span><span lang=EN-US> </span><span
lang=EN-US>double</span>[][] <span lang=EN-US>getResultMatrix</span>();</p>

<p class=a0CxSpLast>}</p>

</div>

<p class=MsoNormal><span lang=UK>Для отримання результатів аналізу у графічному
вигляді компоненту слід передати посилання на діаграму. </span></p>

<p class=MsoNormal><span lang=UK>Компонент може працювати або у режимі
однорівневого експерименту, або у режимі багаторівневого експерименту. </span></p>

<p class=MsoNormal><span lang=UK>У першому випадку компонент видає інформацію
про довірчий інтервал для результатів експерименту і графічно відображає його
розміри на фоні експериментальних даних.</span></p>

<p class=MsoNormal><span lang=UK>У режимі багаторівневого експерименту, компонент
дозволяє вибрати функцію регресії і знайти її параметри і отримати графічне відображення.
Окрім того надається інформація про результати перевірки на однорідність
дисперсій, вплив фактору та адекватність функції регресії.  Приклади
використання компоненту зображені на рисунках 2, 3.</span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><img
width=626 height=339 id="Рисунок 3" src="Components.files/image002.jpg"></p>

<p class=MsoTitle><span lang=UK>Рисунок 2 – Приклад використання RegresAnaliser
для аналізу результатів однорівневого експерименту</span></p>

<p class=a><img width=643 height=313 id="Рисунок 2"
src="Components.files/image003.jpg"></p>

<p class=MsoTitle><span lang=UK>Рисунок 3 – Приклад використання RegresAnaliser
для аналізу результатів багаторівневого експерименту</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Компонент </span><span
lang=EN-US>RegresAnaliser</span><span lang=UK> являє собою тільки візуальну
оболонку. За обробку та аналіз даних відповідає ієрархія класів з базовим
абстрактним класом RegresTester</span><span lang=EN-US>s</span><span lang=UK>,
які також містяться в пакеті </span><span lang=EN-US>widjets</span><span
lang=UK>.</span><span lang=EN-US>regres</span><span lang=UK>. Саме вони
забезпечують дисперсійний та регресійний аналіз отриманих результатів.</span></p>

<h4 style='margin-top:12.0pt;margin-right:36.85pt;margin-bottom:3.0pt;
margin-left:85.55pt;text-indent:0cm'><a name="_Toc319860447"><span lang=UK>Клас
RegresTester</span></a><span lang=EN-US>s</span></h4>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Ієрархія класів, що
забезпечують дисперсійний та регресійний аналіз результатів моделювання та
публічні методи класу RegresTester</span><span lang=EN-US>s</span><span
lang=UK> показані на рисунку 4.</span></p>

<p class=a><img width=631 height=371 id="Рисунок 1"
src="Components.files/image004.jpg"></p>

<p class=MsoTitle><span lang=UK>Рисунок 4 – Діаграма класу </span><span
lang=EN-US>RegresTesters</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Обробка даних
ініціюється викликом методу </span><span lang=EN-US>T</span><span lang=UK>estMatrix
класу </span><span lang=EN-US>RegresTesters</span><span lang=UK>. Через
параметри цього методу на обробку надходять матриця результатів експериментів
matrix та масив значень факторів factorArray.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Виклик методу
призводить до розрахунку статистичних характеристик отриманих даних. Отримані
характеристики запам’ятовуються у полях класу </span><span lang=EN-US>RegresTesters</span><span
lang=UK>, які перераховані нижче.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>p – кількість
рівнів зміни фактора.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>n – кількість
експериментів на рівні.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>avrgArray – масив
середніх значень відгуку для кожного рівня. </span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>dArray – масив
дисперсій відгуку на кожному рівні.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>doverArray – масив
довірчих інтервалів на рівнях.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>avrg </span>–<span
lang=UK> загальне середнє.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>dExpr – дисперсія
експерименту.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>dFactor – дисперсія
фактору.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>dAdequat –
дисперсія адекватності.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Доступ до цих даних
можливий у підкласах, а також реалізується через методи </span><span
lang=EN-US>get</span>…() <span lang=UK>цього класу.</span> </p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>У методі
використовуються поліморфні методи calculateParameters(), f() та k(). В
базовому класі ці методи визначені як абстрактні, а конкретна їх реалізація
знаходиться у підкласах.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Метод
calculateParameters() забезпечує обчислення параметрів функції регресії для
відповідного класу.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Метод f(</span><span
lang=EN-US>double</span><span lang=UK>) використовується для розрахунку значень
функції регресії.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Метод k() повертає
кількість параметрів рівняння регресії.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Клас </span><span
lang=EN-US>RegresTesters</span><span lang=UK> має двох абстрактних спадкоємців
– класи </span><span lang=EN-US>Regres</span><span lang=UK>1 та </span><span
lang=EN-US>Regres</span><span lang=UK>2.</span></p>

<h4 style='margin-top:12.0pt;margin-right:36.85pt;margin-bottom:3.0pt;
margin-left:85.55pt;text-indent:0cm'><a name="_Toc319860448"><span lang=UK>Ієрархія
класів Regres1</span></a></h4>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK> Клас </span><span
lang=EN-US>Regres</span><span lang=UK>1 забезпечує отримання рівняння регресії
у вигляді f=a*&#966;1(</span><span lang=EN-US>x</span><span lang=UK>), де &#966;1(</span><span
lang=EN-US>x</span><span lang=UK>) – довільна функція, від якої залежить вигляд
лінії регресії. Для забезпечення розрахунків значень функції регресії
відповідно до наведеної формули у класі реалізовано метод f(</span><span
lang=EN-US>double</span><span lang=UK>), що був визначений у суперкласі як
абстрактний. Цей метод, у свою чергу, використовує абстрактний метод fі1(</span><span
lang=EN-US>double</span><span lang=UK>), який має бути реалізований у підкласах,
і забезпечувати обчислення значень функції &#966;1(</span><span lang=EN-US>x</span><span
lang=UK>).</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Реалізовано також метод
k(), який повертає 1, виходячи з того, що функція регресії має лише один
параметр – а. </span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Визначення
невідомого коефіцієнту <b>а</b> в цьому класі забезпечено реалізацією метода
calculateParameters(), у якому реалізовано розрахунок за формулою, яка була
отримана вище.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Клас </span><span
lang=EN-US>Regres</span><span lang=UK>1 має декілька спадкоємців, у яких
реалізовано конкретний вигляд функції &#966;1(</span><span lang=EN-US>x</span><span
lang=UK>). </span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Клас </span><span
lang=EN-US>Regres</span><span lang=UK>1</span><span lang=EN-US>Undepend</span><span
lang=UK> реалізує функцію &#966;1(</span><span lang=EN-US>x</span><span
lang=UK>) у вигляді &#966;1(</span><span lang=EN-US>x</span><span lang=UK>) =
1. В результаті виходить, що клас RegresUndepend реалізує визначення параметрів
функції регресії виду f=a. Це випадок, коли відгук не залежить від фактору.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Клас Regres1Proportion
використовується для створення об’єктів, які забезпечують отримання рівняння
регресії у вигляді </span><span lang=EN-US>f</span><span lang=UK>=a*x. Для
цього в класі перевизначений метод </span><span lang=EN-US>fi</span><span
lang=UK>1(</span><span lang=EN-US>double</span><span lang=UK>), який реалізує
функцію &#966;1(</span><span lang=EN-US>x</span><span lang=UK>) у вигляді
&#966;1(</span><span lang=EN-US>x</span><span lang=UK>)&nbsp;=&nbsp;</span><span
lang=EN-US>x</span><span lang=UK>.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Клас Regres1NonProportion1
використовується для створення об’єктів, які забезпечують отримання рівняння
регресії у вигляді </span><span lang=EN-US>f</span><span lang=UK>=a*x/(1-</span><span
lang=EN-US>x</span><span lang=UK>). Для цього в класі перевизначений метод </span><span
lang=EN-US>fi</span>1<span lang=UK>(</span><span lang=EN-US>double</span><span
lang=UK>), який реалізує функцію &#966;1(</span><span lang=EN-US>x</span><span
lang=UK>) у вигляді &#966;1(</span><span lang=EN-US>x</span><span lang=UK>) = </span><span
lang=EN-US>x</span><span lang=UK>/(1-</span><span lang=EN-US>x</span><span
lang=UK>).</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>В класі Regres1NonProportion2
метод </span><span lang=EN-US>fi</span><span lang=UK>1(</span><span lang=EN-US>double</span><span
lang=UK>), реалізує функцію &#966;1(</span><span lang=EN-US>x</span><span
lang=UK>) у вигляді &#966;1(</span><span lang=EN-US>x</span><span lang=UK>)  = </span><span
lang=EN-US>x</span><span lang=UK>*</span><span lang=EN-US>x</span><span
lang=UK>/(1-</span><span lang=EN-US>x</span><span lang=UK>). В результаті
забезпечується отримання рівняння регресії у вигляді </span><span lang=EN-US>f</span><span
lang=UK>=a*</span><span lang=EN-US>x</span><span lang=UK>*</span><span
lang=EN-US>x</span><span lang=UK>/(1-</span><span lang=EN-US>x</span><span
lang=UK>)</span></p>

<h4 style='margin-top:12.0pt;margin-right:36.85pt;margin-bottom:3.0pt;
margin-left:85.55pt;text-indent:0cm'><a name="_Toc319860449"><span lang=UK>Ієрархія
класів Regres</span></a><span lang=EN-US>2</span></h4>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Клас Regres2 наслідує
клас RegressTesters і містить методи, які забезпечують отримання рівняння
регресії у вигляді f=a*&#966;1(</span><span lang=EN-US>x</span><span lang=UK>)+b*&#966;2(</span><span
lang=EN-US>x</span><span lang=UK>), де &#966;1(</span><span lang=EN-US>x</span><span
lang=UK>) і &#966;2(</span><span lang=EN-US>x</span><span lang=UK>)  – будь-які
функції, які залежать від фактору і визначають вигляд лінії регресії. Для
забезпечення розрахунків значень функції регресії відповідно до наведеної
формули у класі реалізовано метод f(</span><span lang=EN-US>double</span><span
lang=UK>), що був визначений у суперкласі як абстрактний. Цей метод, у свою
чергу, використовує абстрактні методи fі1(</span><span lang=EN-US>double</span><span
lang=UK>) та fі2(</span><span lang=EN-US>double</span><span lang=UK>), які
мають бути реалізовані у підкласах, і забезпечувати обчислення значень функцій 
&#966;1(</span><span lang=EN-US>x</span><span lang=UK>) та &#966;2(</span><span
lang=EN-US>x</span><span lang=UK>).</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>У класі реалізовано
свій варіант методу k(), який повертає 2, виходячи з того, що функція регресії
має два параметри – а і </span><span lang=EN-US>b</span><span lang=UK>.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Розрахунок
коефіцієнтів a і b забезпечує реалізація методу calculateParameters(), який
використовує формули, що були отримані вище.</span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Клас </span><span
lang=EN-US>Regres</span><span lang=UK>2 має декілька спадкоємців, у яких
реалізовано конкретний вигляд функцій &#966;1(</span><span lang=EN-US>x</span><span
lang=UK>) та &#966;2(</span><span lang=EN-US>x</span><span lang=UK>). </span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Клас Regres2Linear реалізує
визначення параметрів функції регресії виду f=a*х+b. В цьому класі метод fі1(</span><span
lang=EN-US>double</span><span lang=UK>) реалізує функцію &#966;1(</span><span
lang=EN-US>x</span><span lang=UK>)  у вигляді  &#966;1(</span><span lang=EN-US>x</span><span
lang=UK>) = х, а функцію &#966;2(</span><span lang=EN-US>x</span><span lang=UK>) 
у вигляді &#966;2(</span><span lang=EN-US>x</span><span lang=UK>) =&nbsp;1. </span></p>

<p class=MsoNormal style='text-indent:37.4pt'><span lang=UK>Клас Regres2</span><span
lang=EN-US>Giperbola</span><span lang=UK> реалізує визначення параметрів
функції регресії виду f=a/х+b. В цьому класі метод fі1(</span><span lang=EN-US>double</span><span
lang=UK>) реалізує функцію &#966;1(</span><span lang=EN-US>x</span><span
lang=UK>)  у вигляді  &#966;1(</span><span lang=EN-US>x</span><span lang=UK>) =
1/х, а функцію &#966;2(</span><span lang=EN-US>x</span><span lang=UK>)  у
вигляді &#966;2(</span><span lang=EN-US>x</span><span lang=UK>) =&nbsp;1. </span></p>

<h4 style='margin-top:12.0pt;margin-right:36.85pt;margin-bottom:3.0pt;
margin-left:85.55pt;text-indent:0cm'><a name="_Toc319860450"><span lang=UK>Розширення
переліку функцій регресії компоненту </span></a><span lang=EN-US>RegresAnaliser</span></h4>

<p class=MsoNormal><span lang=UK>Щоб додати до компоненту </span><span
lang=EN-US>RegresAnaliser</span><span lang=UK> ще якусь функцію регресії,
необхідно створити клас, що успадковує клас </span><span lang=EN-US>RegresTesters</span><span
lang=UK>, і реалізувати у ньому абстрактні методи суперкласу. Завдання
спрощується, якщо нова функція регресії має вигляд, що передбачений класами  </span><span
lang=EN-US>Regres</span><span lang=UK>1 або </span><span lang=EN-US>Regres</span><span
lang=UK>2. У цьому випадку достатньо успадкувати один з цих класів та
реалізувати у ньому метод fі1(</span><span lang=EN-US>double</span><span
lang=UK>), бо методи fі1(</span><span lang=EN-US>double</span><span lang=UK>)
та fі2(</span><span lang=EN-US>double</span><span lang=UK>).</span></p>

<p class=MsoNormal><span lang=UK>Створивши клас, що відповідає за нову функцію
регресії, слід створити об’єкт цього класу і передати його компоненту RegresAnaliser
за допомогою методу addFunction(RegresTesters);</span></p>

<p class=MsoNormal><span lang=UK>&nbsp;</span></p>

</div>

</body>

</html>
